name: user/updatePassword
args:
  - name: userId
    type: i64
  - name: oldPassword
  - name: newPassword
steps:
  # 验证参数合法性
  - if: util.isEmpty(userId)
    error: USER_ID_IS_EMPTY
  - if: util.isEmpty(oldPassword)
    error: USER_OLD_PASSWORD_IS_EMPTY
  - if: util.isEmpty(newPassword)
    error: USER_NEW_PASSWORD_IS_EMPTY

  # 查询
  - dao: user/get
    table: TB_USER
    args:
      - userId
    setVar: user
    setVarType: user

  # 判断用户是否存在
  - if: user == null
    error: USER_IS_NOT_EXIST

  # 加密输入的密码
  # 生成 密码
  - var: md5OldPassword
    value: util.md5(user.salt + oldPassword)
  - var: md5NewPassword
    value: util.md5(user.salt + newPassword)

  # 判断密码是否一致
  - if: util.notEquals(md5OldPassword, user.password)
    error: USER_OLD_PASSWORD_IS_ERROR

  # 更新
  - dao: user/updatePassword
    args:
      - userId
      - user.salt
      - newPassword