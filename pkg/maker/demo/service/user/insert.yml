name: user/insert
args:
  - name: user
    type: user
steps:
  # 验证参数合法性
  - if: util.isNull(user)
    error: USER_IS_NULL
  - if: util.isEmpty(user.name)
    error: USER_NAME_IS_EMPTY
  - if: util.isEmpty(user.account)
    error: USER_ACCOUNT_IS_EMPTY
  - if: util.isEmpty(user.password)
    error: USER_PASSWORD_IS_EMPTY

  # 查询账号
  - dao: user/userExist
    args:
      - user.account
    serVar: userExist

  # 账号存在则抛出相应异常
  - if: userExist
    error: USER_ACCOUNT_ALREADY_EXIST

  # 生成盐 + 加密密码
  # 生成 userId
  - var: user.userId
    value: util.genID()
  # 生成 盐
  - var: user.salt
    value: util.genStr(6, 6)
  # 生成 密码
  - var: user.password
    value: util.md5(salt + user.password)

  # 插入数据入库
  - dao: user/insert
    args:
      - user

  # 插入redis
  - redis: set
    key: user-${user.userId}
    value: user
    expire: USER_REDIS_EXPIRE

return: user