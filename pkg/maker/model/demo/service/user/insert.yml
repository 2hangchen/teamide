name: user/insert
inParams:
  - name: user
    type: user
steps:
  # 验证参数合法性
  - validates:
      - rule: util.isNull(user)
        error: USER_IS_NULL
      - rule: util.isEmpty(user.name)
        error: USER_NAME_IS_EMPTY
      - rule: util.isEmpty(user.account)
        error: USER_ACCOUNT_IS_EMPTY
      - rule: util.isEmpty(user.password)
        error: USER_PASSWORD_IS_EMPTY

  # 查询账号
  - db: count
    table: TB_USER
    wheres:
      - name: account
        value: user.account
    var: countAccount

  # 账号存在则抛出相应异常
  - if: countAccount > 0
    error: USER_ACCOUNT_ALREADY_EXIST

  # 生成盐 + 加密密码
  - vars:
      # 生成 userId
      - name: user.userId
        value: util.genID()
      # 生成 盐
      - name: salt
        value: util.genStr(6, 6)
      # 生成 密码
      - name: md5Password
        value: util.md5(salt + user.password)

  # 插入数据入库
  - db: insert
    table: TB_USER
    columns:
      - name: userId
        value: user.userId
      - name: name
        value: user.name
      - name: account
        value: user.account
      - name: salt
        value: salt
      - name: password
        value: md5Password

  # 插入redis
  - redis: set
    key: user-${user.userId}
    value: user
    expire: USER_REDIS_EXPIRE

return: user